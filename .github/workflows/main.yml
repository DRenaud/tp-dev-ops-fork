# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on: [push,workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test-front:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache Node module
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Cache Test Result
        uses: actions/cache@v2
        with:
          path: '**/target'
          key: ${{ runner.os }}-modules-${{ github.run_id }}
      - uses: actions/setup-node@v1
        with:
          node-version: 14.16.1
     
      - name: Install node.js packages
        run: npm install

      - name: TU
        run: npm run ci:frontend:test
     
  test-back:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache Test Result
        uses: actions/cache@v2
        with:
          path: '**/target'
          key: ${{ runner.os }}-modules-${{ github.run_id }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Run backend test
        run: |
            chmod +x mvnw
            npm run ci:backend:test

 
  test-e2e:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [test-front, test-back]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - uses: actions/setup-node@v1
        with:
          node-version: 14.16.1
      
      
      - name: Cache Node module
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'E2E: Package'
        run: ./mvnw -ntp verify -DskipTests --batch-mode "-Pprod" "-Pe2e" "-Denforcer.skip=true"*
      - name: 'E2E: Prepare'
        run: npm run ci:e2e:prepare:docker
      - name: 'E2E: Run'
        run: npm run ci:e2e:run
      - name: 'E2E: Teardown'
        run: npm run ci:e2e:teardown

  sonar:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [test-e2e]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Cache Test Result
        uses: actions/cache@v2
        with:
          path: '**/target'
          key: ${{ runner.os }}-modules-${{ github.run_id }}
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  deploy:
     # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: sonar

    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v2
      - name: Cache Node module
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - uses: actions/setup-node@v1
        with:
          node-version: 14.16.1
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Deploy to Heroku
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
            HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
            if [ ! -z "$HEROKU_API_KEY" ]; then
                ./mvnw -ntp com.heroku.sdk:heroku-maven-plugin:2.0.5:deploy -DskipTests -Pprod -Dheroku.buildpacks=heroku/jvm -Dheroku.appName=pour-les-devs-ops
            else
                echo No HEROKU_API_KEY, skipping...
            fi
